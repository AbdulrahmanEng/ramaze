This time we are proud to announce Version 0.1.4 of the Ramaze framework, a
light and modular open source web framework.

Since the last release hundreds of lines of documentation and specs have been
written. Ramaze was ported to JRuby and received lots of special love regarding
bugfixes and polishing the overall API.

An extensive set of specs is covering almost every detail of the implementation
and usage. It is developed by several people and already in production-use at
some companies.

Special (alphabetic) thanks go to:

Aman 'tmm1' Gupta         - specs, Sass support
Fabian Buch               - porting to JRuby
Gabriele 'riffraff' Renzi - specs, documentation, cleanup
Jonathan 'Kashia' Buch    - documentation
Riku Räisänen             - extensive testing


Home page: http://ramaze.rubyforge.org
IRC: #ramaze on irc.freenode.net


Short summary of changes from 0.1.3 to 0.1.4:

  - Even better error handling.

  - Many bugs fixed.

  - Support for Sass CSS templates.

  - Layouts for actions.

  - Close to 100% documented methods/classes/methods.

  - Primitive filebased action-cache.

  - Runs on JRuby.

  - Easier integration of ramazes spec-helpers for your own applications.

  - Dirlisting functionality.


A complete Changelog is available at http://manveru.net/ramaze/doc/CHANGELOG


Known issues:

  - none yet, waiting for your reports :)


Features:
  - Builds on top of the Rack library, which provides easy use of adapters like
    Mongrel, WEBrick, CGI or FCGI.

  - Supports a wide range of templating-engines like:
      Amrita2, Erubis, Haml, Liquid, Markaby, Remarkably and its own engine
      called Ezamar.

  - Highly modular structure, you can just use the parts you like. This also
      means that it's very simple to add your own customizations.

  - A variety of helpers is already available, giving you things like advanced
      caching, OpenID-authentication or aspect-oriented programming for your
      controllers.

  - It is possible to use the ORM you like, be it ActiveRecord, Og, Kansas or
      something more simplistic like a wrapper around YAML::Store.

  - Good documentation: although we don't have 100% (dcov says around 75%)
      documentation right now, just about every part of Ramaze is covered with
      basic and advanced docs.
      There are a variety of examples and a tutorial available.

  - Friendly community: lastly, but still quite important, there are people from
      all over the world using Ramaze, so you can get almost instant help and
      info.


For more information please come to http://ramaze.rubyforge.org or ask directly
on IRC (irc://irc.freenode.net/#ramaze)

Thank you,
Michael 'manveru' Fellinger and the Ramaze community
