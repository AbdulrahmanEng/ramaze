This time we are proud to announce Version 0.2.0 of the Ramaze framework, a
light and modular open source web framework.

This release features a lot of work directly from our community and i am really
greatful for everybody who helped in testing, patching and contributing new
exciting features.

An extensive set of specs and docs is covering almost every detail of the
implementation and usage. It is under development by a growing community and in
production-use at companies.

Special (alphabetic) thanks go to:

Aman 'tmm1' Gupta      - tons of patches, specs and support
Jonathan 'Kashia' Buch - patches for localization
Riku Räisänen          - as usual, extensive testing
Pistos                 - submitted his first patch
Stephan Maka           - XSLT templating, implementation, specs and examples


Home page: http://ramaze.rubyforge.org
IRC: #ramaze on irc.freenode.net


Short summary of changes from 0.1.4 to 0.2.0:

  - Contrib facility, for simple experimental user-contributions

  - Routes

  - As always, lots of bugfixes

  - complete XSLT templating system, usage and specs

  - Improved localization filter

  - Added gzip filter

  - Support for the new upcoming nagoro templating engine.

  - Tool::Tidy is gone for good


A complete Changelog is available at http://manveru.net/ramaze/doc/CHANGELOG


Known issues:

  - none yet, waiting for your reports :)


Features:
  - Builds on top of the Rack library, which provides easy use of adapters like
    Mongrel, WEBrick, CGI or FCGI.

  - Supports a wide range of templating-engines like:
      Amrita2, Erubis, Haml, Liquid, Markaby, Remarkably and its own engine
      called Ezamar.

  - Highly modular structure, you can just use the parts you like. This also
      means that it's very simple to add your own customizations.

  - A variety of helpers is already available, giving you things like advanced
      caching, OpenID-authentication or aspect-oriented programming for your
      controllers.

  - It is possible to use the ORM you like, be it ActiveRecord, Og, Kansas or
      something more simplistic like a wrapper around YAML::Store.

  - Good documentation: although we don't have 100% (dcov says around 75%)
      documentation right now, just about every part of Ramaze is covered with
      basic and advanced docs.
      There are a variety of examples and a tutorial available.

  - Friendly community: lastly, but still quite important, there are people from
      all over the world using Ramaze, so you can get almost instant help and
      info.


For more information please come to http://ramaze.rubyforge.org or ask directly
on IRC (irc://irc.freenode.net/#ramaze)

Thank you,
Michael 'manveru' Fellinger and the Ramaze community
